[
{
"title": "DAY 4-2",
"content": ""
},
{
"title": "JavaScript -- 让网页动起来",
"content": ""
},
{
"title": "JS基础语法",
"content": "<dd>1.JS的放置位置<br>origin 写在html标签上<br>inner 写在script标签中<br>outter 写在外部js文件，通过script标签引入js文件<br><br>2.JS的变量<br>变量的声明 <br>var a 声明时赋值/先声明再赋值<br><br>注意点：<br>当变量只声明而未赋值时，则变量的值会返回 undfinded<br>变量要有定义才能使用，若变量未声明就使用，JavaScript 会报错<br>可以在同一条var命令中声明多个变量，例如 var a, b, c<br>若使用 var 重新声明一个已经存在的变量且未赋值，则无效<br>若使用 var 重新声明一个已经存在的变量且赋值，则会覆盖<br>JavaScript 是一种动态类型、弱类型语言，也就是说，变量的类型没有限制，可以赋予各种类型的值<br><br>3.JS变量的数据类型<br>数值 Number<br>字符串 String<br>布尔值 Bool<br>未定义 undefined<br>空 Null<br>对象 Object<br><br>4.JS的数据类型转换<br>函数转换<br>parseInt() 转换成整数<br>parseFloat() 转换成浮点数<br><br>显示转换<br>toString() 数字转换为字符串<br>String() 任意数值转换为字符串<br>数据 +“”  最简单的转字符串的方式</dd><br><br>"
},
{
"title": "JS的对象：数据的集合",
"content": "<dd>1.数组<br>定义<br>var arr = [值1,值2,值3]; 隐式创建<br>var arr = new Array(值1,值2,值3); 直接实例化<br>var arr = new Array(size); 创建数组并指定长度<br><br>基本操作<br>获取/设置长度 属性 length<br>获取设置元素 下标法 array[index(>=0)]<br>遍历<br>for(var i=0; i<=array.length-1; i++) 不遍历属性<br>for(var index(名称任意) in array) 不遍历索引中的undefined<br>array.forEach(function(element,index) 不遍历属性和索引中的undefined<br><br>方法<br>.push 添加元素到最后<br> .unshift 添加元素到最前<br> .pop 删除最后一项<br> .shift 删除第一项<br> .reverse 数组翻转<br> .join 数组转成字符串<br>.indexOf 数组元素索引<br><br>2.函数<br>定义 <br>声明语句 function 函数名([参数列表])<br>定义表达式 var 变量名 = function([参数列表])<br>Function构造函数 var 变量名 = new Function('a','b','return (a+b)')<br><br>参数<br>实参可以省略，那么对应形参为undefined<br>若函数形参同名，在使用时以最后一个值为准<br>默认值：当参数为特殊值时，可以赋予默认值<br>参数为值传递，传递副本 ；引用传递时传递地址，操作的是同一个对象<br><br>返回<br>有返回值，通过return返回<br>不需要返回数据时，则无返回值/返回undefinded，使用return结束方法<br>作用域<br>全局变量与局部变量同名问题<br>在函数中定义变量时，若没有加var关键字，使用之后自动变为全局变量<br>3.对象<br>创建<br>字面量形式  var 对象名 = {键:值,...}<br>通过new Object var 对象名 = new Object()<br>Object对象的create方法 var 对象名 = Object.create()<br><br>赋值<br>对象名.键 = 值 键存在修改数据/键不存在添加数据<br><br>this指针<br>指向自身的指针，可以作为对象方法的参数<br><br>*各个对象类型的集合元素也可以是对象</dd><br><br>"
}

]

