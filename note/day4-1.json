[
{
"title": " DAY 4-1",
"content": ""
},
{
"title": " JavaScript -- 让网页动起来",
"content": ""
},
{
"title": "JS Bom对象 ： ", 
"content": "<dd>浏览器对象模型，使 JavaScript有能力与浏览器对话<br><br>1.系统对话框<br>消息框 .alert() 方法用于显示带有一条指定消息和一个 OK 按钮的警告框<br>输入框 .prompt() 方法用于显示可提示用户进行输入的对话框<br>确认框 .confirm() 方法用于显示一个带有指定消息和 OK 及取消按钮的对话框<br><br>2.打开窗口<br>方法 .open(URL, 指定方式) 方法导航到特定的URL/新的窗口<br><br>3.关闭窗口<br>方法 .close()<br><br>4.时间函数<br>setTimeout(function, times) 在指定的毫秒数后调用函数或计算表达式<br>clearTimeout(setTimeout_id) 清除指定函数的执行<br>setInteval(function, times) 按照指定的周期（以毫秒计）来调用函数或计算表达式<br>clearInterval(setInteval_id) 清除指定函数的执行<br>区别：setTimeout() 执行一次，setInteval() 周期执行<br><br>5.history对象<br>属性length 返回浏览器历史列表中的 URL 数量<br>方法 .back() 加载 history 列表中的前一个 URL<br>方法 .forward() 加载历史列表中的下一个 URL<br>方法 .go(number|URL) 在 History 的 URL 列表中的相对位置|要访问的 URL<br><br>6.location对象<br>属性 href 设置或返回完整的 URL<br>方法 .reload() 重新加载当前文档<br>方法 .replace() 用新的文档替换当前文档。(不能后退)</dd><br><br>"
},
{
"title": "JS Dom对象 ", 
"content": "<dd>文档对象模型，是 HTML 和 XML 文档的编程接口，展现了 HTML 的树形结构<br><br>1.节点<br>文档节点 文档本身整个文档   document<br>元素节点  所有的 HTML 元素  a、div、p<br>属性节点 HTML 元素内的属性  id、href、name、class<br>文本节点 元素内的文本  hello<br>注释节点 HTML 中的注释  <!--  -- ><br><br>2.获取节点<br>*获取节点需要等待节点初始化完成，可以将JS写在末尾/使用onload事件来处理JS<br>方法 .getElementById() 根据id获取dom对象<br>方法 .getElementsByTagName() 根据标签名获取dom对象数组<br>方法 .getElementsByClassName() 根据样式名获取dom对象数组<br>方法.getElementsByName() 根据name属性值获取dom对象数组<br><br>3.创建节点<br>方法.createElement() 创建一个新的节点，需要传入节点的标签名称，返回创建的元素对象<br>方法.createTextNode() 创建一个文本节点，可以添加文本内容<br>方法.innerHTML() 创建一个新的节点，会覆盖文本内容<br><br>4.插入节点<br>方法.write() 将任意的字符串插入到文档中<br>方法.appendChild() 向元素中添加新的子节点，作为最后一个子节点<br>方法.insertBefore() 向指定的已有的节点之前插入新的节点<br><br>5.查找节点<br>childNodes 返回元素的一个子节点的数组<br>children 返回元素的所有的子元素数组<br>firstChild 返回元素的第一个子节点<br>lastChild 返回元素的最后一个子节点<br>nextSibling 返回元素的下一个兄弟节点<br><br>6.删除节点<br>方法.removeChild() 从元素中移除子节点</dd><br><br>"
}

]

	
	